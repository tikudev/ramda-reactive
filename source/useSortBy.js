import { computed, unref } from 'vue'
import { sortBy, curryN } from 'ramda'

/**
 * Sorts the list according to the supplied function.
 *
 * @param {import('./types').MaybeRef<Function>} fn 
 * @param {import('./types').MaybeWatchSource<Array>} list The list to sort.
 * @return {import('vue').ComputedRef<Array>} A new list sorted by the keys generated by `fn`.
*/
const useSortBy = curryN(2,(fn, list) => computed(() => sortBy(typeof fn === 'function' ? (...fnArgs) => unref(unref(fn)(...fnArgs)) : unref(fn), typeof list === 'function' ? list() : unref(list))))

export default useSortBy
